import { useState, useEffect } from "react";
import { createClient } from "@supabase/supabase-js";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import {
  Home,
  Settings,
  ClipboardList,
  Package,
  Users,
  Save,
  Wrench,
  FileText,
  FileDown
} from "lucide-react";
import * as XLSX from "xlsx";

const supabaseUrl = "https://fbckoodcnhlbuqmpuona.supabase.co";
const supabaseKey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZiY2tvb2RjbmhsYnVxbXB1b25hIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY0NzMwOTEsImV4cCI6MjA2MjA0OTA5MX0.z_Uguza2GwHiYO34sgvm2ScE1e1XmXj-6O1L6Qbcv6M";
const supabase = createClient(supabaseUrl, supabaseKey);

export default function App() {
  const [activePage, setActivePage] = useState("dashboard");

  const exportAllToExcel = async () => {
    const tables = ["manutencoes", "equipamentos", "estoque"];
    const workbook = XLSX.utils.book_new();

    for (let table of tables) {
      const { data, error } = await supabase.from(table).select("*");
      if (error) {
        alert(`Erro ao exportar tabela ${table}: ${error.message}`);
        continue;
      }
      const worksheet = XLSX.utils.json_to_sheet(data);
      XLSX.utils.book_append_sheet(workbook, worksheet, table);
    }

    XLSX.writeFile(workbook, "relatorio_completo_pcm.xlsx");
  };

  const pages = {
    dashboard: <div className="p-4">Bem-vindo ao Sistema de Gestão da Manutenção</div>,
    // ...demais páginas iguais...
    usuarios: (
      // ...conteúdo igual...
    ),
    relatorios: (
      <div className="p-4 space-y-4">
        <h2 className="text-xl font-semibold">Relatórios</h2>
        <Button onClick={exportAllToExcel} className="flex items-center space-x-2">
          <FileDown className="mr-2 h-4 w-4" />
          Exportar Todos os Dados (Excel)
        </Button>
        <p className="text-sm text-gray-500">* Exporta manutenções, equipamentos e estoque para um único arquivo Excel.</p>
      </div>
    )
  };

  return (
    <div className="flex min-h-screen">
      <aside className="w-64 bg-gray-100 p-4 shadow-md">
        <h2 className="text-xl font-bold mb-6">PCM Web</h2>
        <nav className="space-y-2">
          <Button variant="ghost" className={`w-full justify-start ${activePage === "dashboard" ? "bg-gray-200" : ""}`} onClick={() => setActivePage("dashboard")}> <Home className="mr-2 h-4 w-4" /> Dashboard </Button>
          <Button variant="ghost" className={`w-full justify-start ${activePage === "equipamentos" ? "bg-gray-200" : ""}`} onClick={() => setActivePage("equipamentos")}> <ClipboardList className="mr-2 h-4 w-4" /> Equipamentos </Button>
          <Button variant="ghost" className={`w-full justify-start ${activePage === "manutencoes" ? "bg-gray-200" : ""}`} onClick={() => setActivePage("manutencoes")}> <Wrench className="mr-2 h-4 w-4" /> Manutenções </Button>
          <Button variant="ghost" className={`w-full justify-start ${activePage === "estoque" ? "bg-gray-200" : ""}`} onClick={() => setActivePage("estoque")}> <Package className="mr-2 h-4 w-4" /> Estoque </Button>
          <Button variant="ghost" className={`w-full justify-start ${activePage === "usuarios" ? "bg-gray-200" : ""}`} onClick={() => setActivePage("usuarios")}> <Users className="mr-2 h-4 w-4" /> Usuários </Button>
          <Button variant="ghost" className={`w-full justify-start ${activePage === "relatorios" ? "bg-gray-200" : ""}`} onClick={() => setActivePage("relatorios")}> <FileText className="mr-2 h-4 w-4" /> Relatórios </Button>
        </nav>
      </aside>
      <main className="flex-1 bg-white p-6">
        <Card>
          <CardContent>{pages[activePage]}</CardContent>
        </Card>
      </main>
    </div>
  );
}
